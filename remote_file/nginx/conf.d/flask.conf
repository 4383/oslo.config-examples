upstream flask-upstream {
    least_conn;

    server flask1:5000 max_fails=3 fail_timeout=30s;
    server flask2:5000 max_fails=3 fail_timeout=30s;
    server flask3:5000 max_fails=3 fail_timeout=30s;

    # keepalive 64;
}

server {
    listen 80;

}

# Parameters for a specific virtual host/server
server {
    # Directory where the contents being requested are stored
    # root /usr/src/app/project/static;

    # Default page that will be served If no page was requested
    # (ie. if www.example.com is requested)
    # index index.html;

    # Server name, IP address, and/or port of the server
    listen 443 ssl;
    # server_name xxx.yyy.zzz.aaa

    ssl_certificate /etc/nginx/certs/server.cert.pem;
    ssl_certificate_key /etc/nginx/certs/server.key.pem;
    ssl_client_certificate /etc/nginx/certs/ca.cert.pem;
    ssl_protocols TLSv1.2;
    ssl_verify_client on;

    # Specified charset to the “Content-Type” response header field
    charset utf-8;

    # Deliver static content from the specified folder
    # location /static {
    #     alias /usr/share/nginx/html/static;
    # }

    # Reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
    location / {
        # Location of the proxy server to send the request to
        proxy_pass http://flask-upstream;

        # Header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Client-Cert $ssl_client_escaped_cert;
        proxy_set_header Client-Subject-Domain-Name $ssl_client_s_dn;
        proxy_set_header Client-Verify $ssl_client_verify;

        # Maximum file size on file uploads
        client_max_body_size 5M;
    }
}
